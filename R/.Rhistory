setwd("~/dev/INE2018/R")
# 리스트의 생성
employee <- list(name="Kim", salary=50000, union=T, part="Server")
employee
fruitbox <- list(box1=c("Apple", "Banana"), box2=c("Melon", "Strawberry"), box3=c("Grape"))
fruitbox
# 리스트 key 추출
names(employee)
# 리스트 value 추출
unlist(fruitbox)
# 리스트 추가
fruitbox$box4 <- c("Kiwi", "Orange")
fruitbox
# 리스트 제거
fruitbox$box3 <- NULL
fruitbox
# 데이터프레임의 생성
d <- data.frame(name=c('A', 'B', 'C'), salary=(30000, 42000, 38000), check=c(T, F, T))
# 데이터프레임의 생성
d <- data.frame(name=c('A', 'B', 'C'), salary=c(30000, 42000, 38000), check=c(T, F, T))
d
d$name
d$salary
d[1]
d[2, 3];
d[2, 3]; d[1];
d[2, 3] d[1]
d[2,]
# 데이터프레임의 함수
dim(d)
nrow(d) # 행의 개수 반환
ncol(d) # the number of columns
head(d, [5])
head(d, 5)
tail(d, 2)
names(d)
rownames(d) # 행 이름 벡터 반환
class(d) # 해당 데이터의 자료형 타입을 반환
is.data.frame(d) # 자료형이 데이터프레임인지 확이하여 Boolean 반환
as.data.frame(d) # 데이터프레임 자료형으로 변환
str(d)
summary(d)
# 데이터프레임의 병합
newrow <- data.frame(name="D", salary=50000, check=T)
newrow
d <- rbind(d, newrow)
d
newcol <- data.frame(part=c(1, 1, 2, 2))
newcol
d <- cbind(d, newcol)
d
# merge
d1 <- d
d2 <- data.frame(name=c("A", "C", "D"), bonus=c("YES", "YES", "NO"))
d2
d1
d3 <- data.frame(bonus=c("YES", "YES", "NO")
d3
d3 <- data.frame(bonus=c("YES", "YES", "NO"))
d3
mmerge(d1, d2)
merge(d1, d2)
d1
merge(d1, d3)
d1
# 데이터의 처리
class <- data.frame(kor=c(92, 99, 72, 45), mat=c(55, 60, 22, 33), eng=c(100, 72, 55, 100), sci=c(44, 56, 88, 92))
class
apply(class, 2, sum)
apply(class, 1, sum)
apply(class, 1, mean) # margin=1 : 행 방향
lapply(class, 2, mean)
library(MASS)
str(Cars93[, 4:6])
laaply(Cars93[, 4:6], sum)
laaply(Cars93[, 4:6], sum)
lapply(Cars93[, 4:6], sum)
unlist(lapply(Cars93[, 4:6], sum))
s1 <- sapply(Cars93[, 4:6], sum)
class(s1)
s1
s2 <- sapply(Cars93[, 4:6], function(x) (x < 30))
s2
class(s2)
head(s2)
tapply(Cars93$Price, Cars93$Manufacturer, mean)
tapply(Cars93$Price, Cars93$Manufacturer, mean)
head(split(Cars93$Price, Cars93$Manufacturer))
subset(Cars93$Price, Cars93$Manufacturer=="Audi")
# 데이터 정렬
Cars93$Price
sort(Cars93$Price, decreasing=T)
sort(Cars93$Price, decreasing=F)
order(Cars93$Price, decreasing = T)
library(MASS)
Insurance
d <- data.frame(Insurance$Holders, Insurance$District, Insurance$Group)
d
d <- data.frame(Holders=Insurance$Holders, District=Insurance$District, Group=Insurance$Group)
d
d2 <- sapply(Insurance$Holders, function(x) (x < 500))
d2
class(d2)
d3 <- merge(d, d2)
d3
unlist(d2)
d2
d
colnames(d2)
d2
d3 <- merge(d, d2)
colnames(d3)
colnames(d3) <- c("Holders", "District", "Group", "Check")
d3
dl <- unlist(d2)
d3 <- merge(d, dl)
colnames(d3) <- c("Holders", "District", "Group", "Check")
d3
d <- data.frame(Holders=Insurance$Holders, District=Insurance$District, Group=Insurance$Group)
d
d2 <- sapply(Insurance$Holders, function(x) (x < 500))
d2
ncol(d2)
as.vector(d2)
ncol(d2)
d4 <- as.vector(d2)
ncol(d4)
d4
d2 <- sapply(name="Check", Insurance$Holders, function(x) (x < 500))
d2 <- sapply(Name="Check", Insurance$Holders, function(x) (x < 500))
d2 <- sapply(Insurance$Holders, function(x) (x < 500))
d2
colnames(d2)
colnames(d2) <- "Check"
d4 <- unlist(d2)
d4
merge(d, d2)
d3 <- cbind(d, d2)
d3
Check <- sapply(Insurance$Holders, function(x) (x < 500))
d3 <- cbind(d, Check)
d3
merge(Insurance, d3)
s <- merge(Insurance, d3)
s
head(s)
head(s, 10)
sum <- tapply(s$Age, sum)
sum <- tapply(head(s, 10)$Age, sum)
sum <- tapply(s$Age, s$Claims, sum)
sum <- tapply(s$Claims, s$Age, sum)
sum
d1 <- data.frame(MEDICINE=c("M1", "M1", "M1", "M1", "M1"), SUBJECT=c("S1", "S2", "S3", "S4", "S5"), EFFECT=c(0.62, 0.77, 0.33, 0.27, 0.84), PROBLEM=c(0.11, 0.05, 0.16, 0.89, 0.77))
d1
d <- data.frame(Holders=Insurance$Holders, District=Insurance$District, Group=Insurance$Group)
d
Check <- sapply(Insurance$Holders, function(x) (x < 500))
d3 <- cbind(d, Check)
d3
s <- merge(Insurance, d3)
s
head(s, 10)
sum <- tapply(s$Claims, s$Age, sum)
sum
d2 <- data.frame(MEDICINE=c("M2", "M2", "M2", "M2", "M2"), SUBJECT=c("S1", "S2", "S3", "S4", "S5"), EFFECT=c(0.15, 0.13, 0.29, 0.18, 0.62), PROBLEM=c(0.13, 0.77, 0.22, 0.10, 0.21))
d2
d <- data.frame(Holders=Insurance$Holders, District=Insurance$District, Group=Insurance$Group)
d
Check <- sapply(Insurance$Holders, function(x) (x < 500))
d3 <- cbind(d, Check)
d3
s <- merge(Insurance, d3)
s
head(s, 10)
sum <- tapply(s$Claims, s$Age, sum)
sum
merge(d1,d2)
d1 <- data.frame(MEDICINE=c("M1", "M1", "M1", "M1", "M1"), SUBJECT=c("S1", "S2", "S3", "S4", "S5"), EFFECT=c(0.62, 0.77, 0.33, 0.27, 0.84), PROBLEM=c(0.11, 0.05, 0.16, 0.89, 0.77))
d1
d2 <- data.frame(MEDICINE=c("M2", "M2", "M2", "M2", "M2"), SUBJECT=c("S1", "S2", "S3", "S4", "S5"), EFFECT=c(0.15, 0.13, 0.29, 0.18, 0.62), PROBLEM=c(0.13, 0.77, 0.22, 0.10, 0.21))
d2
merge(d1,d2)
rbind(d1, d2)
d3 <- data.frame(MEDICINE=c("M3", "M3", "M3", "M3", "M3"), SUBJECT=c("S1", "S2", "S3", "S4", "S5"), EFFECT=c(0.72, 0.13, 0.09, 0.57, 0.44), PROBLEM=c(0.33, 0.31, 0.42, 0.55, 0.66))
rbind(d1, d2, d3)
d <- rbind(d1, d2, d3)
d
effect <- tapply(d$effect, d$MEDICINE, mean)
effect <- tapply(d$EFFECT, d$MEDICINE, mean)
effect
problem <- tapply(d$PROBLEM, d$MEDICINE, mean)
problem
sort(problem, decreasing = F)
sort(problem, decreasing = T)
